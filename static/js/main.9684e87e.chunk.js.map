{"version":3,"sources":["components/Statistics/index.jsx","components/Notification/index.jsx","components/Section/index.jsx","components/Feedback/FeedbackOptoin.jsx","components/Feedback/index.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","item","fontWeight","marginLeft","result","Statistics","good","neutral","bad","total","positivePercentage","classes","className","Notification","title","Section","children","FeedbackOption","onLeaveFeedback","type","name","onClick","Feedback","state","addFeedback","event","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAGMA,EAAYC,YAAgB,CAChCC,KAAM,CACJC,WAAY,IACZC,WAAY,GAGdC,OAAQ,CACND,WAAY,KAqCDE,EAjCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzCC,EAAUZ,IAEhB,OACE,+BACE,qBAAIa,UAAWD,EAAQV,KAAvB,kBACO,sBAAMW,UAAWD,EAAQP,OAAzB,SAAkCE,OAEzC,qBAAIM,UAAWD,EAAQV,KAAvB,qBACU,sBAAMW,UAAWD,EAAQP,OAAzB,SAAkCG,OAE5C,qBAAIK,UAAWD,EAAQV,KAAvB,iBACM,sBAAMW,UAAWD,EAAQP,OAAzB,SAAkCI,OAExC,qBAAII,UAAWD,EAAQV,KAAvB,mBACQ,sBAAMW,UAAWD,EAAQP,OAAzB,SAAkCK,OAE1C,qBAAIG,UAAWD,EAAQV,KAAvB,+BAEE,uBAAMW,UAAWD,EAAQP,OAAzB,UAAkCM,EAAlC,cC3BOG,EALM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAErB,OAAO,4BAAIA,KCKCC,EARC,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SACtB,OACI,0BAASJ,UAAU,UAAnB,UACI,oBAAIA,UAAU,QAAd,SAAuBE,IACtBE,MC4BEC,EAhCQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAExB,OACE,oCACE,wBACEC,KAAK,SACLC,KAAK,OACLC,QAASH,EACTN,UAAU,MAJZ,kBAQA,wBACEO,KAAK,SACLC,KAAK,UACLC,QAASH,EACTN,UAAU,MAJZ,qBAQA,wBACEO,KAAK,SACLC,KAAK,MACLC,QAASH,EACTN,UAAU,MAJZ,qBC8BSU,G,kNAzCbC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPgB,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAMG,OAAOR,KAAOO,EAAUF,EAAMG,OAAOR,MAAQ,O,EAIxDS,mBAAqB,WACnB,OAAO,EAAKN,MAAMjB,KAAO,EAAKiB,MAAMhB,QAAU,EAAKgB,MAAMf,K,EAG3DsB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKT,MAAMjB,KAAO,EAAKuB,qBAAwB,M,4CAEpE,WACE,OACE,qCACE,cAAC,EAAD,CAAgBX,gBAAiBe,KAAKT,cAEtC,cAAC,EAAD,CAASV,MAAM,aAAf,SACGmB,KAAKJ,qBAAuB,EAC3B,cAAC,EAAD,CACEvB,KAAM2B,KAAKV,MAAMjB,KACjBC,QAAS0B,KAAKV,MAAMhB,QACpBC,IAAKyB,KAAKV,MAAMf,IAChBC,MAAOwB,KAAKJ,qBACZnB,mBAAoBuB,KAAKH,oCAG3B,cAAC,EAAD,CAAchB,MAAO,+B,GAnCVoB,cCMRC,G,MAVH,WACV,OACE,qBAAKvB,UAAU,YAAf,SACA,cAAC,EAAD,CAASE,MAAO,wBAAhB,SACE,cAAC,EAAD,UCHNsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9684e87e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  item: {\r\n    fontWeight: 600, \r\n    marginLeft: 5,   \r\n  },\r\n  \r\n  result: {\r\n    marginLeft: 5,\r\n  },\r\n});\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <ul>\r\n      <li className={classes.item}>\r\n        Good:<span className={classes.result}>{good}</span>\r\n      </li>\r\n      <li className={classes.item}>\r\n        Neutral:<span className={classes.result}>{neutral}</span>\r\n      </li>\r\n      <li className={classes.item}>\r\n        Bad:<span className={classes.result}>{bad}</span>\r\n      </li>\r\n      <li className={classes.item}>\r\n        Total:<span className={classes.result}>{total}</span>\r\n      </li>\r\n      <li className={classes.item}>\r\n        Positive feedback:\r\n        <span className={classes.result}>{positivePercentage}%</span>\r\n      </li>\r\n    </ul>\r\n  )\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","\r\nconst Notification = ({ title }) => {\r\n   \r\n   return <p>{title}</p>;\r\n};\r\n\r\nexport default Notification;","const Section = ({ title, children }) => {\r\n    return (\r\n        <section className=\"section\">\r\n            <h2 className=\"title\">{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n};\r\nexport default Section;","const FeedbackOption = ({ onLeaveFeedback }) => {\r\n    \r\n  return (\r\n    <section>\r\n      <button\r\n        type=\"button\"\r\n        name=\"good\"\r\n        onClick={onLeaveFeedback}\r\n        className=\"btn\"\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"neutral\"\r\n        onClick={onLeaveFeedback}\r\n        className=\"btn\"\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"bad\"\r\n        onClick={onLeaveFeedback}\r\n        className=\"btn\"\r\n      >\r\n        Bad\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FeedbackOption;\r\n","import { Component } from 'react';\r\nimport Statistics from '../Statistics';\r\nimport Notification from '../Notification';\r\nimport Section from '../Section';\r\nimport FeedbackOption from '../Feedback/FeedbackOptoin';\r\nimport './Feedback.css';\r\n\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  addFeedback = event => {\r\n    this.setState(prevState => ({\r\n      [event.target.name]: prevState[event.target.name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.floor((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <FeedbackOption onLeaveFeedback={this.addFeedback} />\r\n\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            ></Statistics>\r\n          ) : (\r\n            <Notification title={'No feedback given'} />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Feedback;","import Feedback from './components/Feedback';\nimport Section from './components/Section';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n    <Section title={'Please leave feedback'}>\n      <Feedback />\n    </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}